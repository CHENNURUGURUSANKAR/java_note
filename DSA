Data Structure : is used to store and organize data . where we can accessed and updated efficiently .
Types of data structures :
    Linear Data Structure :
           elements are arraged in a order one after another . and it is easy to implement .
            popular linear data structures:
                       Arrays:
                             Same type of elements are arraged in one after another for fixed size
                             java syntax:
                                int [] arr=new int[5];
                                arr[0]=2;
                                arr[1]=2;
                                arr[2]=2;
                                arr[3]=2;
                                arr[4]=2;
                                //size will "arr.length" method
                                // access value with index poion like " arr[index]"
                                // copy arrays 
                                int[] arrcopy=new int[5];
                                arrcopy=arr;
                                
                       Stacks:
                          stack is data strucutre , elements are stored in LIFo principle, last added element will remove first 
                            few Method for stack :
                                    Push(): it is  used to add element in the last index/node
                                    Pop(): it is used remove last element 
                                    IsEmpty(): it is used to check weither thae stack is empty or not // we use tis method to while removing the element 
                                    IsFull(): it is used to check weither the stack is full or not // we will this while adding a element to stack 
                                    Peek(): it is used get top / last elemrnt from stack with put removing the element
                                    
                       Queue :
                        Queue is unlike to stack it will FIFO priciple 
                            few method for Queue:
                                    Enqueue(): Enqueue() is to add element to top/ last index
                                    Dequeue(): Dequeue is to remove first element 
                                    IsFull():check full or not 
                                    IsEmpty(): check empty or not 
                                    Peek():get element with removing
                        LinkedList :
                               it is a data structure to store data . elements are connectedin series of nodes each node contain data and next node address 
                                    Types of LinkedList:
                                            Singally LinkedList:
                                                        this type LinkedList Each node contain data of the item and next node addtess at the last node containis NULL as address
                                            Doublly LinkedList:
                                                        this type of LinkedList can go either forward and backward i the list at the node address will NULL
                                            Circular LinkedList:
                                                        This type of LInkedList Last node connect to first node 
                              
    Non-Linear Data Structure:
            it is unlike to linear data structures , elements are not in series , insted of series elements are arraged in herarchical mannar 
            type of NON-linear data structures:
                Graphs: Graphs are data structure where each node is called Vertex and vertex are conneted to vertices through edges
                    graph based data structure:
                            Spanning tree minimum spanning tree:
                            strongly conneted componets:
                            Adjeces matrix :
                            Adjeces List:
                            
                    
                Trees: In tree only edge between 2 vertices
                     Tree based data structures:
                                Binary Tree: 
                                Binary Search Tree:
                                B+  Tree:
                                B- Tree:
                                AVL Tree:
                                red black tree:
/// n*(n+1)/2
    
